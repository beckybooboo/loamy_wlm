
1. The user information is processed from the front page (lines like user_goal = st.session_state.user_goal
2. The dataframe is filtered with the relevant information for each person - line 229 in "Home.py" calls first load_data() then "filter_dataframe()". These functions are in the Loaddata.py file. 

2a. Load data just filters for rows that are not cancelled and ages that are over 20 - to limit our dataset

2b. Filter dataframe takes in df, dx, age, amh, afc, and the minimum number of people we would want to show (size).
We bucket ages into bins, and filter on age. We bucket diagnoses into bins with the groups. then we filter on afc. I believe we did not actually filter on AMH due to dataset size, even though we ask the question. This was because we were looking for just a "quick" visualization, rather than optimizing for which parameters.

For each outcome a line like this is run
labels, groups, highest, highest_percent, num, index = get_outcomes(filtered_df_list, 50, 'stim_day_bins')  in Home.py. Here the logic is basically just making sure we are over a threshold (We hardcoded 50+ people to show any data). So, I save 3 datasets in part 2b because the dataset shrinks depending on missingness in the outcome row. The loop here just goes through the filters in order (age, dx, afc) and includes the final output, along with the %s and labels - which becomes the labels on the screen